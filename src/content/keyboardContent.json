{
  "breadcrumb": [
    { "label": "Home", "link": "/" },
    { "label": "Keyboard", "link": null }
  ],
  "sections": [
    {
      "heading": "h1",
      "type": "section",
      "title": "Keyboard Navigation",
      "content": [
        "Keyboard navigation, or 'Keyboard Accessible' as it is often referred to, means that all the functionalities of the digital content are operable through keyboard inputs alone. This is taken from principle 2.1 in WCAG which states that websites should strive to ",
        {
          "type": "a",
          "href": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard-accessible",
          "target": "_blank",
          "rel": "noopener",
          "aria-label": "Read more about WCAG principle 2.1",
          "text": "make all functionality available from a keyboard."
        },
        " This includes taking into consideration that all functionality of a keyboard can be accomplished by keyboard users, speech input (creating keyboard input), by mouse (using on screen keyboards) and other assistive technologies (AT) that create simulated keystrokes as their output. ",
        "The user therefore has to be able to navigate through menus, activating buttons, clicking links, filling out forms and controlling media players without necessarily using a mouse."
      ]
    },
    {
      "heading": "h2",
      "type": "section-with-list",
      "title": "What should the keyboard do?",
      "listType": "unordered",
      "content": [
        "There are four success criteria in the keyboard principle that must be met for the website to be considered keyboard accessible."
      ],
      "list": [
        {
          "title": "2.1.1 Keyboard:",
          "description": " Everything on the website can be done with with a keyboard except feehand movements. This will be ensured by making all pointer (mouse) actions have keyboard equivalents. We do this so that users who rely on keyboard usage can still navigate through our website."
        },
        {
          "title": "2.1.2 No Keyboard Trap:",
          "description": " When navigating with the keyboard, users dont get stuck (e.g. caught in a loop cycling through menu options). We can accomplish this by ensuring that users can navigate away from components since some users have no other avaiable means of navigating."
        },
        {
          "title": "2.1.3 Keyboard (No exception):",
          "description": " This is an extension of criterion 2.1.1, except in this case all of the content is operable from the keyboard. No exceptions. "
        },
        {
          "title": "2.1.4 Character Key Shortcuts:",
          "description": " If a keyboard shortcut can be utilized using a single letter, punctuation, numbers or symbol charachter, then it must either be able to be turned off, remapped or to only activate when it has focus. "
        }
      ],
      "paragraphAfter": {
        "text": [
          "For users who has to rely on keyboards (due to possible disabilities, impairments, convenience or preference) keyboard accessibility is vital. It ensures that they have access and can use the services without major issues, promoting inclusivity in digital services. "
        ]
      }
    },
    {
      "heading": "h2",
      "type": "section-with-list",
      "title": "Examples of keyboard accessibility",
      "content": [
        "In addition to fulfilling the success-criteras of WCAG, we can also think about some practical examples of when a user would want to navigate using the keyboard. "
      ],
      "list": [
        {
          "title": "Navigating menus:",
          "description": " Users should be able to navigate a dropdown menu on a webpage using the arrow-keys and the enter-key to selec items."
        },
        {
          "title": "Interactive elements:",
          "description": " It should be possible to focus on elements that can be interacted with (e.g. buttons, links and various form-fields) using the tab-key and utilize the enter-key to interact with them."
        },
        {
          "title": "Media players:",
          "description": " Media players on websites should be reachable and controlable via the keyboard. Some common usage of keyboard shortcuts for this can be to pause, play, mute, adjust volume, enable caption and many more."
        }
      ]
    },
    {
      "heading": "h2",
      "type": "section",
      "title": "What can I do as a developer?",
      "content": [
        "As a developer it is your efforts that allows the web to become more accessible. When it comes to focusable elements alot of the functionality is already built into the standard HTML-elements such as ",
        {
          "type": "code",
          "text": "button"
        },
        ", ",
        {
          "type": "code",
          "text": "a"
        },
        ", ",
        {
          "type": "code",
          "text": "input"
        },
        " and many more. Other elements can gain the ability to be focusable by using tab-index, but be careful to not overdo it or break the natural flow of the page.",
        " A trick that has been getting more popular as more developers embrace WCAG is to ",
        {
          "type": "a",
          "href": "https://www.w3.org/TR/WCAG20-TECHS/G1.html",
          "target": "_blank",
          "rel": "noopener",
          "aria-label": "Read the guide to meeting the 2.4.1 WCAG criteria.",
          "text": " add a link at the top of every page which skips directly to the main-content."
        },
        " This way users don't have to skim through all elements in the header before getting to the content they actually want to interact with. Navigating straight to the main content will save time, frustration and create a more accessible experience. ",
        " Another important thing is to talk with the developers and designers in your team about accessibility. Ask yourselves how you would navigate the page if you could only use the keyboard. How would you wish to navigate a header containing a navbar, a menu, a section with links, a button and a search field. Which one should be the users highest priority? and what comes after?",
        " All of this affects the user experience, nobody wants to repeatedly hit the tab-key to skip over content they're not interested in. Discuss with others or ask yourself about how navigating a webpage only using tab would look and feel like. Chances are you will learn something new and gain a new perspective."
      ]
    },
    {
      "heading": "h2",
      "type": "section-with-list",
      "title": "Useful links",
      "content": [],
      "listType": "unordered",
      "list": [
        {
          "link": [
            {
              "type": "a",
              "href": "https://www.freecodecamp.org/news/designing-keyboard-accessibility-for-complex-react-experiences/",
              "target": "_blank",
              "rel": "noopener",
              "aria-label": "An article about how to design for keywith accessibility in React",
              "text": "A good article about how to design for keyboard accessibility in React"
            }
          ]
        },
        {
          "link": [
            {
              "type": "a",
              "href": "https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility",
              "target": "_blank",
              "rel": "noopener",
              "aria-label": "Tips and trick regarding focus management",
              "text": "Tips and trick regarding focus management"
            }
          ]
        },
        {
          "link": [
            {
              "type": "a",
              "href": "https://dev.to/eevajonnapanula/keyboard-accessible-tabs-with-react-5ch4",
              "target": "_blank",
              "rel": "noopener",
              "aria-label": "A developer talks about how to design a tablist that uses keyboard navigation",
              "text": "A developer talks about how to design a tablist that uses keyboard navigation"
            }
          ]
        },
        {
          "link": [
            {
              "type": "a",
              "href": "https://uxdesign.cc/taking-the-keyboard-navigation-red-pill-dbb76dd73b1e",
              "target": "_blank",
              "rel": "noopener",
              "aria-label": "An article about the no-mouse challenge and what you can learn from it",
              "text": "An article about the no-mouse challenge and what you can learn from it"
            }
          ]
        }
      ]
    }
  ]
}
